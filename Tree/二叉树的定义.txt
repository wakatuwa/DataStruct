二叉树：
	任意一个节点的子节点个数最多两个，且子节点的位置不可更改

满二叉树：
	在不增加树的层数的前提下，无法再多添加一个节点的二叉树就是满二叉树
完全二叉树：
	如果只是删除了满二叉树最底层最右边的连续若干个节点，这样形成的二叉树就是完全二叉树(满二叉树是完全二叉树的一个特例)

树的存储
	二叉树的存储
		连续存储[完全二叉树]，以数组方式存储必须要求二叉树是完全二叉树
			优点:查找某个节点的父节点和子节点(也包括判断有没有子节点)速度很快
			缺点:内存耗费过大

		链式存储	

一般树的存储
	双亲表示法：求父节点方便
	孩子表示法：求子节点方便
	双亲孩子表示法：求父节点和子节点都很方便
	二叉树表示法：把一个一般树转化为二叉树来存储
				具体转换方法：
					设法保证任意一个节点的左指针域指向它的第一个孩子
					右指针域指向它的兄弟
					只要能满足此条件，就可以把一个普通树转化为二叉树
					一个普通树转化成的二叉树的根节点没有右子树
森林的存储
	先把森林转化为二叉树，再存储二叉树

对二叉树的操作
		遍历
			先序遍历
				先访问根节点
				再先序访问左子树
				再先序访问右子树

			中序遍历
				先中序访问左子树
				再访问根节点
				再中序访问右子树
				BDCEALFNQM
				BDCAMQELN				
			后序遍历
				先后序访问左子树
				再后序访问右子树
				再访问根节点
				BDMFLECA
				NWTSFPLQM
			已知两种遍历序列求原始二叉树
				只有通过先序和中序   或者 中序和后序遍历才能还原出原始的二叉树
				但是通过先序和后序是无法还原出原始二叉树的

				
					



